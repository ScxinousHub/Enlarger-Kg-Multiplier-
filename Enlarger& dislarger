local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

local originalData = {}

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "PetSizeWeightChanger"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame (smaller and centered)
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 280, 0, 220)
frame.Position = UDim2.new(0.5, -140, 0.5, -110)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Name = "PetSizeFrame"
frame.Parent = gui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 14)
frameCorner.Parent = frame

local frameStroke = Instance.new("UIStroke")
frameStroke.Color = Color3.fromRGB(0, 255, 255)
frameStroke.Thickness = 1.5
frameStroke.Parent = frame

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 36)
title.Position = UDim2.new(0, 0, 0, 8)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 24
title.TextColor3 = Color3.fromRGB(0, 255, 255)
title.Text = "Scxinous Hub"
title.TextStrokeColor3 = Color3.fromRGB(0, 150, 150)
title.TextStrokeTransparency = 0
title.TextXAlignment = Enum.TextXAlignment.Center
title.TextYAlignment = Enum.TextYAlignment.Center
title.Parent = frame

-- Exit Button
local exitBtn = Instance.new("TextButton")
exitBtn.Size = UDim2.new(0, 28, 0, 28)
exitBtn.Position = UDim2.new(1, -36, 0, 8)
exitBtn.BackgroundTransparency = 1
exitBtn.Text = "✕"
exitBtn.Font = Enum.Font.GothamBold
exitBtn.TextSize = 24
exitBtn.TextColor3 = Color3.fromRGB(255, 80, 80)
exitBtn.Parent = frame
exitBtn.MouseEnter:Connect(function()
	TweenService:Create(exitBtn, TweenInfo.new(0.15), {TextColor3 = Color3.fromRGB(255, 120, 120)}):Play()
end)
exitBtn.MouseLeave:Connect(function()
	TweenService:Create(exitBtn, TweenInfo.new(0.15), {TextColor3 = Color3.fromRGB(255, 80, 80)}):Play()
end)
exitBtn.MouseButton1Click:Connect(function()
	gui:Destroy()
end)

-- Pet info label
local petInfoLabel = Instance.new("TextLabel")
petInfoLabel.Size = UDim2.new(0.9, 0, 0, 24)
petInfoLabel.Position = UDim2.new(0.05, 0, 0, 50)
petInfoLabel.BackgroundTransparency = 1
petInfoLabel.Font = Enum.Font.Gotham
petInfoLabel.TextSize = 16
petInfoLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
petInfoLabel.Text = "No pet equipped"
petInfoLabel.TextXAlignment = Enum.TextXAlignment.Center
petInfoLabel.Parent = frame

-- Input box for scale
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0.8, 0, 0, 36)
inputBox.Position = UDim2.new(0.1, 0, 0, 80)
inputBox.PlaceholderText = "Enter Weight (1 - 1000)"
inputBox.Font = Enum.Font.Gotham
inputBox.TextSize = 16
inputBox.TextColor3 = Color3.fromRGB(200, 255, 255)
inputBox.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
inputBox.ClipsDescendants = true
inputBox.Parent = frame

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 10)
inputCorner.Parent = inputBox

local inputStroke = Instance.new("UIStroke")
inputStroke.Color = Color3.fromRGB(0, 255, 255)
inputStroke.Thickness = 1
inputStroke.Parent = inputBox

-- Apply Button
local applyBtn = Instance.new("TextButton")
applyBtn.Size = UDim2.new(0.8, 0, 0, 36)
applyBtn.Position = UDim2.new(0.1, 0, 0, 120)
applyBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 200)
applyBtn.Text = "Apply Pet Weight"
applyBtn.Font = Enum.Font.GothamBold
applyBtn.TextSize = 16
applyBtn.TextColor3 = Color3.fromRGB(20, 20, 20)
applyBtn.Parent = frame

local applyCorner = Instance.new("UICorner")
applyCorner.CornerRadius = UDim.new(0, 10)
applyCorner.Parent = applyBtn

local applyStroke = Instance.new("UIStroke")
applyStroke.Color = Color3.fromRGB(0, 170, 170)
applyStroke.Thickness = 1
applyStroke.Parent = applyBtn

-- Reset Button
local resetBtn = Instance.new("TextButton")
resetBtn.Size = UDim2.new(0.8, 0, 0, 36)
resetBtn.Position = UDim2.new(0.1, 0, 0, 160)
resetBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
resetBtn.Text = "Reset to Normal Weight"
resetBtn.Font = Enum.Font.GothamBold
resetBtn.TextSize = 16
resetBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
resetBtn.Parent = frame

local resetCorner = Instance.new("UICorner")
resetCorner.CornerRadius = UDim.new(0, 10)
resetCorner.Parent = resetBtn

local resetStroke = Instance.new("UIStroke")
resetStroke.Color = Color3.fromRGB(130, 30, 30)
resetStroke.Thickness = 1
resetStroke.Parent = resetBtn

-- Footer: stacked YouTube and TikTok labels
local footerFrame = Instance.new("Frame")
footerFrame.Size = UDim2.new(1, 0, 0, 40)
footerFrame.Position = UDim2.new(0, 0, 1, -40)
footerFrame.BackgroundTransparency = 1
footerFrame.Parent = frame

local youtubeLabel = Instance.new("TextLabel")
youtubeLabel.Size = UDim2.new(1, 0, 0, 20)
youtubeLabel.Position = UDim2.new(0, 0, 0, 0)
youtubeLabel.BackgroundTransparency = 1
youtubeLabel.Font = Enum.Font.Gotham
youtubeLabel.TextSize = 14
youtubeLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
youtubeLabel.Text = "YouTube"
youtubeLabel.TextXAlignment = Enum.TextXAlignment.Center
youtubeLabel.TextYAlignment = Enum.TextYAlignment.Center
youtubeLabel.Parent = footerFrame

local tiktokLabel = Instance.new("TextLabel")
tiktokLabel.Size = UDim2.new(1, 0, 0, 20)
tiktokLabel.Position = UDim2.new(0, 0, 0, 20)
tiktokLabel.BackgroundTransparency = 1
tiktokLabel.Font = Enum.Font.Gotham
tiktokLabel.TextSize = 14
tiktokLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
tiktokLabel.Text = "TikTok"
tiktokLabel.TextXAlignment = Enum.TextXAlignment.Center
tiktokLabel.TextYAlignment = Enum.TextYAlignment.Center
tiktokLabel.Parent = footerFrame

-- Hover effect function
local function hoverEffect(button, normalColor, hoverColor)
	button.MouseEnter:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor}):Play()
	end)
	button.MouseLeave:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = normalColor}):Play()
	end)
end
hoverEffect(applyBtn, applyBtn.BackgroundColor3, Color3.fromRGB(0, 230, 230))
hoverEffect(resetBtn, resetBtn.BackgroundColor3, Color3.fromRGB(220, 60, 60))

-- Helper: Get equipped pet tool
local function getEquippedPetTool()
	local char = player.Character or player.CharacterAdded:Wait()
	for _, tool in pairs(char:GetChildren()) do
		if tool:IsA("Tool") then
			return tool
		end
	end
	return nil
end

-- Set pet size scale (use input directly as scale)
local function setPetSize(petTool, scale)
	if petTool:IsA("Model") then
		petTool:ScaleTo(scale)
	elseif petTool:IsA("Tool") then
		for _, obj in ipairs(petTool:GetChildren()) do
			if obj:IsA("Model") then
				obj:ScaleTo(scale)
			elseif obj:IsA("BasePart") then
				local mesh = obj:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.Scale = Vector3.new(scale, scale, scale)
				else
					obj.Size = Vector3.new(scale, scale, scale)
				end
			end
		end
	end
end

-- Update pet name text to include weight like "PetName [x.xx KG]"
local function updatePetNameWithWeight(tool, weight)
	local name = tool.Name
	if name:find("%[%d+%.?%d* KG%]") then
		local newName = name:gsub("%[%d+%.?%d* KG%]", string.format("[%.2f KG]", weight))
		tool.Name = newName
	else
		tool.Name = name .. string.format(" [%.2f KG]", weight)
	end
end

-- Remove weight part [XX.XX KG] from name (for reset)
local function removeWeightFromName(name)
	return (name:gsub("%s*%[%d+%.?%d* KG%]", ""))
end

-- Save original scale & weight for pet tool if not saved yet
local function saveOriginalData(tool)
	if not originalData[tool] then
		local originalScale = 1
		for _, obj in ipairs(tool:GetChildren()) do
			if obj:IsA("BasePart") then
				local mesh = obj:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					originalScale = mesh.Scale.X
					break
				else
					originalScale = obj.Size.X
					break
				end
			end
		end
		local weight = tonumber(tool.Name:match("%[(%d+%.?%d*) KG%]")) or originalScale

		originalData[tool] = {
			scale = originalScale,
			weight = weight,
			name = removeWeightFromName(tool.Name),
			currentScale = originalScale,
			currentWeight = weight,
		}
	end
end

-- Update pet info label text
local function updatePetInfoLabel()
	local tool = getEquippedPetTool()
	if tool then
		saveOriginalData(tool)
		petInfoLabel.Text = tool.Name
	else
		petInfoLabel.Text = "No pet equipped"
	end
end

-- Apply Button Logic
applyBtn.MouseButton1Click:Connect(function()
	local input = tonumber(inputBox.Text)
	if not input or input < 1 or input > 1000 then
		warn("⚠ Enter a valid number between 1 and 1000.")
		return
	end

	local tool = getEquippedPetTool()
	if tool then
		saveOriginalData(tool)
		setPetSize(tool, input)
		updatePetNameWithWeight(tool, input)
		originalData[tool].currentScale = input
		originalData[tool].currentWeight = input
		updatePetInfoLabel()
		print("Applied scale and updated weight to equipped pet: " .. tool.Name)
	else
		warn("No equipped pet tool found.")
	end
end)

-- Reset Button Logic
resetBtn.MouseButton1Click:Connect(function()
	local tool = getEquippedPetTool()
	if tool and originalData[tool] then
		local orig = originalData[tool]
		setPetSize(tool, orig.scale)
		tool.Name = orig.name
		originalData[tool].currentScale = orig.scale
		originalData[tool].currentWeight = orig.weight
		updatePetInfoLabel()
		print("Reset pet to original scale and weight: " .. tool.Name)
	else
		warn("No original data saved for current pet or no pet equipped.")
	end
end)

-- Live update pet info label every 0.3 sec
coroutine.wrap(function()
	while true do
		task.wait(0.3)
		updatePetInfoLabel()
	end
end)()
